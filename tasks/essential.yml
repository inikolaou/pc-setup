- name: Install build-essential package
  ansible.builtin.apt:
    name: build-essential
  become: yes
  when: ansible_facts['distribution'] == "Ubuntu"
  tags:
    - neovim
    - dev-env

- name: Check that nvm exists
  stat:
    path: ~/.nvm
  register: nvm_exists
  tags: 
    - nvm
    - neovim
    - dev-env

- name: Install nvm
  become: no
  ansible.builtin.shell: >
    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.39.1/install.sh | bash
  args:
    executable: "{{ ansible_env.HOME }}/.nix-profile/bin/zsh"
    chdir: "$HOME"
    creates: "$HOME/.nvm/nvm.sh"
  when: not nvm_exists.stat.exists
  tags: 
    - nvm
    - neovim
    - dev-env

- name: Check that node exists
  stat:
    path: ~/.nvm/versions/node
  register: node_exists
  tags: 
    - node
    - neovim
    - dev-env

- name: Install node
  become: no
  ansible.builtin.shell: . {{ ansible_env.HOME }}/.nvm/nvm.sh && nvm install --lts
  args:
    executable: "{{ ansible_env.HOME }}/.nix-profile/bin/zsh"
    chdir: "{{ ansible_env.HOME }}"
  when: not node_exists.stat.exists
  tags: 
    - node
    - neovim
    - dev-env

- name: Check that neofetch exists
  stat:
    path: ~/.nix-profile/bin/neofetch
  register: neofetch_exists
  tags: utils

- name: Install neofetch
  ansible.builtin.shell: "nix-env -iA nixpkgs.neofetch"
  when: not neofetch_exists.stat.exists
  tags: utils

- name: Check that htop exists
  stat:
    path: ~/.nix-profile/bin/htop
  register: htop_exists
  tags: utils

- name: Install htop
  ansible.builtin.shell: "nix-env -iA nixpkgs.htop"
  when: not htop_exists.stat.exists
  tags: utils

- name: Check that speedtest exists
  stat:
    path: ~/.nix-profile/bin/speedtest
  register: speedtest_exists
  tags: utils

- name: Install speedtest
  ansible.builtin.shell: "nix-env -iA nixpkgs.speedtest-cli"
  when: not speedtest_exists.stat.exists
  tags: utils